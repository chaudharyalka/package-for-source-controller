#@ load("@ytt:data", "data")
#@ load("@ytt:overlay", "overlay")
#@overlay/match by=overlay.subset({"kind":"Deployment"})
---
spec:
  template:
    spec:
      containers:
        #@overlay/match by=overlay.all
        - env:
          #@ if data.values.no_proxy != "":
          - name: NO_PROXY
            value: #@ data.values.no_proxy
          #@ end
          #@ if data.values.https_proxy != "":
          - name: HTTPS_PROXY
            value: #@ data.values.https_proxy
          #@ end
          #@ if data.values.http_proxy != "":
          - name: HTTP_PROXY
            value: #@ data.values.http_proxy
          #@ end
          resources:
            limits:
              cpu: #@ data.values.limits_cpu
              memory: #@ data.values.limits_memory
---
#@ load("@ytt:data", "data")
#@ load("@ytt:overlay", "overlay")

#@overlay/match by=overlay.subset({"kind": "Namespace"})
---
apiVersion: v1
kind: Namespace
metadata:
  name: #@ data.values.namespace
---
#@overlay/match by=overlay.subset({"kind": "Service"})
---
spec:
  ports:
    #@overlay/match by=overlay.subset({"name": "http"}), expects=1
    - name: http
      port: #@ data.values.service_port
---
#@overlay/match by=overlay.subset({"kind": "Role", "metadata": {"name": "fluxcd-source-leader-election-role"}})
---
metadata:
  #@overlay/match missing_ok=True
  namespace: #@ data.values.namespace
  name: #@ "{}-leader-election-role".format("fluxcd-source")

#@overlay/match by=overlay.subset({"kind": "RoleBinding", "metadata": {"name": "fluxcd-source-leader-election-rolebinding"}})
---
metadata:
  #@overlay/match missing_ok=True
  namespace: #@ data.values.namespace
  name: #@ "{}-leader-election-rolebinding".format("fluxcd-source")
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: #@ "{}-leader-election-role".format("fluxcd-source")
subjects:
  #@overlay/match by=overlay.subset({"kind": "ServiceAccount"}), expects=1
  - kind: ServiceAccount
    name: default
    namespace: #@ data.values.namespace

#@overlay/match by=overlay.subset({"kind": "ClusterRole", "metadata": {"name": "fluxcd-source-manager-role"}})
---
metadata:
  name: #@ "{}-manager-role".format("fluxcd-source")

#@overlay/match by=overlay.subset({"kind": "ClusterRoleBinding", "metadata": {"name": "fluxcd-source-manager-rolebinding"}})
---
metadata:
  name: #@ "{}-manager-rolebinding".format("fluxcd-source")
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: #@ "{}-manager-role".format("fluxcd-source")
subjects:
  #@overlay/match by=overlay.subset({"kind": "ServiceAccount"}), expects=1
  - kind: ServiceAccount
    name: default
    namespace: #@ data.values.namespace

#@overlay/match by=overlay.subset({"kind": "Deployment", "metadata": {"name": "source-controller"}})
---
metadata:
 #@overlay/match missing_ok=True
 namespace: #@ data.values.namespace

#@overlay/match by=overlay.subset({"kind": "Service", "metadata": {"name": "source-controller"}})
---
metadata:
 #@overlay/match missing_ok=True
 namespace: #@ data.values.namespace
